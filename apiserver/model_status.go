/*
 * App Stopwatch API
 *
 * API to access and configure the app stopwatch
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package apiserver

// Status - Status object
type Status struct {

	// Shows, if the application is up
	Up bool `json:"up,omitempty"`
}

// AssertStatusRequired checks if the required fields are not zero-ed
func AssertStatusRequired(obj Status) error {
	return nil
}

// AssertRecurseStatusRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Status (e.g. [][]Status), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseStatusRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aStatus, ok := obj.(Status)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertStatusRequired(aStatus)
	})
}
